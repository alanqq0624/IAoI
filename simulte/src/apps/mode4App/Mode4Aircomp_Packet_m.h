//
// Generated file, do not edit! Created by nedtool 5.6 from apps/mode4App/Mode4Aircomp_Packet.msg.
//

#ifndef __MODE4AIRCOMP_PACKET_M_H
#define __MODE4AIRCOMP_PACKET_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
	#include "inet/common/geometry/common/Coord.h"
	
	// copy from common/LteCommon.h
	#include "common/LteCommon.h"
//	typedef unsigned short MacNodeId;
// }}

/**
 * Class generated from <tt>apps/mode4App/Mode4Aircomp_Packet.msg:28</tt> by nedtool.
 * <pre>
 * packet Mode4Aircomp_Packet
 * {
 *     unsigned int sno;		// Sequence Number
 *     simtime_t timestamp;
 *     simtime_t period;
 *     unsigned short nodeId;
 *     inet::Coord pos;
 *     inet::Coord speed;
 *     bool risk;
 *     string fullname;
 * }
 * </pre>
 */
class Mode4Aircomp_Packet : public ::omnetpp::cPacket
{
  protected:
    unsigned int sno;
    ::omnetpp::simtime_t timestamp;
    ::omnetpp::simtime_t period;
    unsigned short nodeId;
    inet::Coord pos;
    inet::Coord speed;
    bool risk;
    ::omnetpp::opp_string fullname;

  private:
    void copy(const Mode4Aircomp_Packet& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Mode4Aircomp_Packet&);

  public:
    Mode4Aircomp_Packet(const char *name=nullptr, short kind=0);
    Mode4Aircomp_Packet(const Mode4Aircomp_Packet& other);
    virtual ~Mode4Aircomp_Packet();
    Mode4Aircomp_Packet& operator=(const Mode4Aircomp_Packet& other);
    virtual Mode4Aircomp_Packet *dup() const override {return new Mode4Aircomp_Packet(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual unsigned int getSno() const;
    virtual void setSno(unsigned int sno);
    virtual ::omnetpp::simtime_t getTimestamp() const;
    virtual void setTimestamp(::omnetpp::simtime_t timestamp);
    virtual ::omnetpp::simtime_t getPeriod() const;
    virtual void setPeriod(::omnetpp::simtime_t period);
    virtual unsigned short getNodeId() const;
    virtual void setNodeId(unsigned short nodeId);
    virtual inet::Coord& getPos();
    virtual const inet::Coord& getPos() const {return const_cast<Mode4Aircomp_Packet*>(this)->getPos();}
    virtual void setPos(const inet::Coord& pos);
    virtual inet::Coord& getSpeed();
    virtual const inet::Coord& getSpeed() const {return const_cast<Mode4Aircomp_Packet*>(this)->getSpeed();}
    virtual void setSpeed(const inet::Coord& speed);
    virtual bool getRisk() const;
    virtual void setRisk(bool risk);
    virtual const char * getFullname() const;
    virtual void setFullname(const char * fullname);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const Mode4Aircomp_Packet& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, Mode4Aircomp_Packet& obj) {obj.parsimUnpack(b);}


#endif // ifndef __MODE4AIRCOMP_PACKET_M_H

